// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            Int             @id @default(autoincrement())
  email         String          @unique
  first_name    String?
  last_name     String?
  password      String?
  createdAt     DateTime        @default(now()) @db.Timestamptz(6)
  updatedAt     DateTime        @default(now()) @updatedAt @db.Timestamptz(6)
  UsersOnGroups UsersOnGroups[]
}

model UsersOnGroups {
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  group      Group    @relation(fields: [groupId], references: [id])
  groupId    Int
  assignedAt DateTime @default(now())

  @@id([userId, groupId])
}

model Group {
  id            Int             @id @default(autoincrement())
  name          String
  icon          String?
  createdAt     DateTime        @default(now()) @db.Timestamptz(6)
  updatedAt     DateTime        @default(now()) @updatedAt @db.Timestamptz(6)
  contributions Contribution[]
  UsersOnGroups UsersOnGroups[]
}

model Contribution {
  id                Int                @id @default(autoincrement())
  name              String
  createdAt         DateTime           @default(now()) @db.Timestamptz(6)
  updatedAt         DateTime           @default(now()) @updatedAt @db.Timestamptz(6)
  contributionItems ContributionItem[]
  group             Group              @relation(fields: [groupId], references: [id])
  groupId           Int
}

model ContributionItem {
  id                 Int              @id @default(autoincrement())
  name               String
  amount             Decimal          @db.Money
  createdAt          DateTime         @default(now()) @db.Timestamptz(6)
  updatedAt          DateTime         @default(now()) @updatedAt @db.Timestamptz(6)
  Contribution       Contribution     @relation(fields: [contributionId], references: [id])
  contributionId     Int
  contributionType   ContributionType @relation(fields: [contributionTypeId], references: [id])
  contributionTypeId Int
}

model ContributionType {
  id               Int                @id @default(autoincrement())
  name             String
  ContributionItem ContributionItem[]
}
