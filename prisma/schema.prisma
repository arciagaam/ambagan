// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                 String            @id @default(uuid())
  email              String            @unique
  first_name         String?
  last_name          String?
  createdAt          DateTime          @default(now()) @db.Timestamptz(6)
  updatedAt          DateTime          @default(now()) @updatedAt @db.Timestamptz(6)
  UsersOnGroups      UsersOnGroups[]
  Contribution       Contribution[]
  ContributionItem   ContributionItem? @relation(fields: [contributionItemId], references: [id])
  contributionItemId Int?
}

model UsersOnGroups {
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  group     Group    @relation(fields: [groupId], references: [id])
  groupId   String
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  role      String //owner and member

  @@id([userId, groupId])
}

model Group {
  id            String          @id @default(uuid())
  name          String
  icon          String?
  createdAt     DateTime        @default(now()) @db.Timestamptz(6)
  updatedAt     DateTime        @default(now()) @updatedAt @db.Timestamptz(6)
  contributions Contribution[]
  UsersOnGroups UsersOnGroups[]
}

model Contribution {
  id                Int                @id @default(autoincrement())
  name              String
  owner             User               @relation(fields: [ownerId], references: [id])
  ownerId           String
  createdAt         DateTime           @default(now()) @db.Timestamptz(6)
  updatedAt         DateTime           @default(now()) @updatedAt @db.Timestamptz(6)
  contributionItems ContributionItem[]
  group             Group              @relation(fields: [groupId], references: [id])
  groupId           String
}

model ContributionItem {
  id             Int          @id @default(autoincrement())
  name           String
  amount         Decimal      @db.Money
  contributors   User[]
  createdAt      DateTime     @default(now()) @db.Timestamptz(6)
  updatedAt      DateTime     @default(now()) @updatedAt @db.Timestamptz(6)
  Contribution   Contribution @relation(fields: [contributionId], references: [id])
  contributionId Int
}
